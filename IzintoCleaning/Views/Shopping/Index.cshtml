@model IEnumerable<IzintoCleaning.Models.Equipment>
@{
    ViewBag.Title = "Shopping";
}

<h2>
    Shop
</h2>


<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-2 table-bordered" style="height:270px">
            <div class="row" style="text-align: center;padding-top:5px">
                @if (item.Picture != null)
                {
                    var base64 = Convert.ToBase64String(inArray: item.Picture);
                    var imgSrc = string.Format(format: "data:image/gif;base64,{0}", arg0: base64);
                    <img src="@imgSrc" width="100" height="100" />
                }
            </div>
            <div class="row">
                <p style="text-align: center">
                    <b> @Html.DisplayFor(expression: modelItem => item.EquipName)</b>
                </p>
                @*<p style="text-align: center">
                    @Html.DisplayFor(expression: modelItem => item.Description)
                </p>*@
                <p style="text-align: center;font-size:large;">
                    @Html.DisplayFor(expression: modelItem => item.EquipCost)<br/>
                    @if (item.QuantityInStock == 0)
                    {
                        <a href="@Url.Action(actionName: "add_to_cart", controllerName: "Shopping", routeValues: new {id = item.EquipID})" class="btn disabled btn-default"><i class="fa fa-shopping-cart disabled"></i> Out of stock</a>
                    }
                    else
                    {
                        <a href="@Url.Action(actionName: "add_to_cart", controllerName: "Shopping", routeValues: new {id = item.EquipID})" class="btn btn-default"><i class="fa fa-shopping-cart"></i> Add to cart</a>
                    }
                </p>
                <p style="text-align: center">

                </p>
            </div>
        </div>
    }
</div>


@if (ViewBag.Err != null)
{

}